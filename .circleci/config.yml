defaults: &defaults
    machine:
      enabled: true
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - restore_cache:
          keys:
            - docker_cache_{{ .Branch }}_{{ .Revision }}
      - run:
          name: load-container
          command: docker load < docker-cache/built-image.tar
      - run:
          name: run-container
          command: script/run-docker
      - run:
          name: wait-for-container
          command: sleep 10
      - run:
          name: test
          command: |
            trap "docker logs exabgp_exporter > ${TEST_RESULTS}/docker-${EXABGP_VERSION}.log" EXIT
            test/libs/bats/bin/bats test/*.bats
      - run:
          name: stop-container
          command: script/stop-docker
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output
version: 2.1
jobs:
  test:
    environment:
      TEST_RESULTS: /tmp/test-results
    docker:
      - image: circleci/golang:1.12.4
    steps:
      - checkout
      - run: mkdir -p ${TEST_RESULTS}
      - run: go get github.com/jstemmer/go-junit-report
      - run:
          name: lint
          command: script/lint
      - run:
          name: coverage
          command: script/coverage
      - run:
          name: test
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            script/test | tee ${TEST_RESULTS}/go-test.out
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
  build_binaries:
    docker:
      - image: circleci/golang:1.12.4
    steps:
      - checkout
      - run: script/build-binaries
      - persist_to_workspace:
          root: .
          paths:
              - .build
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: .build/
          destination: binaries/{{ .Branch }}
  build_tarballs:
    docker:
      - image: circleci/golang:1.12.4
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build-tarballs
          command: |
            mkdir .tarballs
            for d in .build/*/; do
              arch=$(basename $d)
              version=$(cat .build/.version)
              tar -cvzf .tarballs/exabgp_exporter-${version}.${arch}.tar.gz -C .build --transform s/${arch}/exabgp_exporter-v${version}.${arch}/ ${arch}
            done
      - persist_to_workspace:
          root: .
          paths:
            - .tarballs
  release:
    docker:
      - image: circleci/golang:1.12.4
    steps:
      - attach_workspace:
          at: .
      - run:
          name: install releaser
          command: go get github.com/tcnksm/ghr
      - run:
          name: github-release
          command: |
            VERSION=$(cat .build/version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} .tarballs/
  build_docker_image:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: build docker image
          command: script/build-docker
      - run:
          name: Do the docker build
          command: |
            mkdir -p docker-cache
            docker save -o docker-cache/built-image.tar lusis-exabgp_exporter
      - save_cache:
          key: docker_cache_{{ .Branch }}_{{ .Revision }}
          paths:
            - docker-cache
  v4_0_4:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.4
      TEST_RESULTS: /tmp/test-results
  v4_0_5:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.5
      TEST_RESULTS: /tmp/test-results
  v4_0_6:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.6
      TEST_RESULTS: /tmp/test-results
  v4_0_8:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.8
      TEST_RESULTS: /tmp/test-results
  v4_0_9:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.9
      TEST_RESULTS: /tmp/test-results
  v4_0_10:
    <<: *defaults
    environment:
      EXABGP_VERSION: 4.0.10
      TEST_RESULTS: /tmp/test-results
workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build_docker_image:
          requires:
            - test
      - build_binaries:
          filters:
            tags:
              only: /.*/
          requires:
            - test
      - build_tarballs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          requires:
            - build_binaries
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          requires:
            - build_tarballs
      - v4_0_4:
          requires:
            - build_docker_image
      - v4_0_5:
          requires:
            - build_docker_image
      - v4_0_6:
          requires:
            - build_docker_image
      - v4_0_8:
          requires:
            - build_docker_image
      - v4_0_9:
          requires:
            - build_docker_image
      - v4_0_10:
          requires:
            - build_docker_image
